server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: userServiceCircuitBreaker
                fallbackUri: forward:/fallback/user-service
            - RewritePath=/api/users/(?<segment>.*), /${segment}
        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/api/accounts/**
          filters:
            - name: CircuitBreaker
              args:
                name: accountServiceCircuitBreaker
                fallbackUri: forward:/fallback/account-service
            - RewritePath=/api/accounts/(?<segment>.*), /${segment}
        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/api/transactions/**
          filters:
            - name: CircuitBreaker
              args:
                name: transactionServiceCircuitBreaker
                fallbackUri: forward:/fallback/transaction-service
            - RewritePath=/api/transactions/(?<segment>.*), /${segment}
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notifications/**
          filters:
            - name: CircuitBreaker
              args:
                name: notificationServiceCircuitBreaker
                fallbackUri: forward:/fallback/notification-service
            - RewritePath=/api/notifications/(?<segment>.*), /${segment}
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
  # Circuit Breaker Configuration
  circuitbreaker:
    resilience4j:
      instances:
        userServiceCircuitBreaker:
          slidingWindowSize: 10
          minimumNumberOfCalls: 5
          permittedNumberOfCallsInHalfOpenState: 3
          waitDurationInOpenState: 5000
          failureRateThreshold: 50
        accountServiceCircuitBreaker:
          slidingWindowSize: 10
          minimumNumberOfCalls: 5
          permittedNumberOfCallsInHalfOpenState: 3
          waitDurationInOpenState: 5000
          failureRateThreshold: 50
        transactionServiceCircuitBreaker:
          slidingWindowSize: 10
          minimumNumberOfCalls: 5
          permittedNumberOfCallsInHalfOpenState: 3
          waitDurationInOpenState: 5000
          failureRateThreshold: 50
        notificationServiceCircuitBreaker:
          slidingWindowSize: 10
          minimumNumberOfCalls: 5
          permittedNumberOfCallsInHalfOpenState: 3
          waitDurationInOpenState: 5000
          failureRateThreshold: 50

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

jwt:
  secret: your-secret-key-here-should-be-at-least-256-bits-long

---
spring:
  config:
    activate:
      on-profile: docker

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
